/* Text to put at the beginning of the generated file. Testing */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

#define PK_LEN 49

#define SIG_LEN 149

typedef struct pixel_keys {
  void *pk;
  void *sk;
  void *pop;
} pixel_keys;

/**
 * Input a pointer to the seed, and its length.
 * The seed needs to be at least
 * 32 bytes long. Output the key pair.
 * Generate a pair of public keys and secret keys,
 * and a proof of possession of the public key.
 */
pixel_keys c_keygen(const uint8_t *seed, size_t seedlen);

/**
 * Input a secret key, a time stamp that matches the timestamp of the secret key,
 * the public parameter, and a message in the form of a byte string,
 * output a signature. If the time stamp is not the same as the secret key,
 * returns an error
 */
void *c_sign_present(void *sk, const uint8_t *msg, size_t msglen, uint64_t tar_time);

void c_sk_update(void **sk, const uint8_t *seed, size_t seedlen, uint64_t tar_time);

/**
 * Input a public key, the public parameter, a message in the form of a byte string,
 * and a signature, outputs true if signature is valid w.r.t. the inputs.
 */
bool c_verify(const void *pk, const uint8_t *msg, size_t msglen, const void *sig);
